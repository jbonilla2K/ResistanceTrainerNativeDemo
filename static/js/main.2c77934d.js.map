{"version":3,"file":"static/js/main.2c77934d.js","mappings":"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","sources":["screens/LoginScreen.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport { CheckBox, Input, Button } from \"@rneui/themed\";\r\nimport {\r\n  Text,\r\n  StyleSheet,\r\n  View,\r\n  Dimensions,\r\n  Pressable,\r\n  TextInput,\r\n} from \"react-native\";\r\nimport * as React from \"react\";\r\n\r\nexport default function LoginScreen({ navigation, route }) {\r\n  let { loginData } = route.params;\r\n\r\n  //state for each input field\r\n  let [username, setUsername] = useState(\" \");\r\n  let [password, setPassword] = useState(\" \");\r\n  return (\r\n    <>\r\n      <View style={styles.container}>\r\n        <View style={styles.inputGroup}>\r\n          <Text style={styles.title}>Resistance Trainer - Native</Text>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Username\"\r\n            onChangeText={setUsername}\r\n          ></TextInput>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Password\"\r\n            onChangeText={setPassword}\r\n          ></TextInput>\r\n        </View>\r\n        <View style={styles.buttonGroup}>\r\n          <Pressable\r\n            style={styles.logButton}\r\n            onPress={() => {\r\n              console.log(`Username: ${username} Password: ${password}`);\r\n              let validUser = (input) => input.username === username;\r\n              let validPass = (input) => input.password === password;\r\n              if (loginData.some(validUser) && loginData.some(validPass)) {\r\n                navigation.navigate(\"Regiment Selection\", {\r\n                  loginData: loginData,\r\n                });\r\n              } else {\r\n                alert(\r\n                  \"Login invalid, please check your entries or press 'Register' to create an account.\"\r\n                );\r\n              }\r\n            }}\r\n          >\r\n            <Text style={styles.logButtonFont}>Login</Text>\r\n          </Pressable>\r\n          <Pressable\r\n            style={styles.regButton}\r\n            onPress={() => {\r\n              navigation.navigate(\"Registration\", { loginData: loginData });\r\n            }}\r\n          >\r\n            <Text style={styles.regButtonFont}>Register</Text>\r\n          </Pressable>\r\n        </View>\r\n      </View>\r\n    </>\r\n  );\r\n}\r\n\r\nconst { width } = Dimensions.get(\"window\");\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#FFC904\",\r\n  },\r\n  regButton: {\r\n    borderTopRightRadius: 15,\r\n    borderBottomRightRadius: 15,\r\n    backgroundColor: \"black\",\r\n    borderWidth: 1,\r\n    borderColor: \"black\",\r\n    width: width * 0.4,\r\n    padding: 10,\r\n  },\r\n  logButton: {\r\n    borderTopLeftRadius: 15,\r\n    borderBottomLeftRadius: 15,\r\n    backgroundColor: \"#FFE278\",\r\n    borderWidth: 1,\r\n    borderColor: \"black\",\r\n    width: width * 0.4,\r\n    padding: 10,\r\n  },\r\n  logButtonFont: {\r\n    fontSize: 35,\r\n    textAlign: \"center\",\r\n  },\r\n  regButtonFont: {\r\n    fontSize: 35,\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n  },\r\n  buttonGroup: {\r\n    flexDirection: \"row\",\r\n    marginTop: 70,\r\n  },\r\n  input: {\r\n    width: width * 0.85,\r\n    fontSize: 30,\r\n    color: \"black\",\r\n    borderWidth: 1,\r\n    borderColor: \"black\",\r\n    borderRadius: 10,\r\n    padding: 3,\r\n    margin: 10,\r\n  },\r\n  inputGroup: {\r\n    borderWidth: 1,\r\n    borderColor: \"black\",\r\n    borderRadius: 15,\r\n    backgroundColor: \"white\",\r\n    padding: 10,\r\n    margin: 10,\r\n  },\r\n  title: {\r\n    fontSize: 30,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n    paddingBottom: 20,\r\n  },\r\n});\r\n","import { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport {\r\n  SafeAreaView,\r\n  FlatList,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Dimensions,\r\n  Pressable,\r\n  TextInput,\r\n} from \"react-native\";\r\nimport { CheckBox, Input, Button } from \"@rneui/themed\";\r\nimport * as React from \"react\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { SwiperFlatList } from \"react-native-swiper-flatlist\";\r\n\r\nimport LoginScreen from \"./screens/LoginScreen\";\r\n\r\nconst Stack = createNativeStackNavigator();\r\nconst loginData = [];\r\nconst defaultUser = {\r\n  username: \"test\",\r\n  password: \"Test1@\",\r\n  usrRegiment: [0, 1, 2, 3, 4],\r\n};\r\n\r\nfunction clearArray(array) {\r\n  for (let i = 0; i <= array.length + 1; i++) {\r\n    array.pop();\r\n  }\r\n}\r\n\r\nexport default function App() {\r\n  useEffect(() => {\r\n    async function getValue() {\r\n      const value = await AsyncStorage.getItem(\"@loginData\");\r\n      if (value === null) {\r\n        console.log(\"Storing user data\" + JSON.stringify(defaultUser));\r\n        loginData.push(defaultUser);\r\n        await AsyncStorage.setItem(\"@loginData\", JSON.stringify(loginData));\r\n      } else {\r\n        console.log(\"Retrieving user data\" + value);\r\n        loginData.push(...JSON.parse(value));\r\n      }\r\n    }\r\n    getValue();\r\n  }, []);\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator initialRouteName=\"Login\">\r\n        <Stack.Screen\r\n          name=\"Login\"\r\n          component={LoginScreen}\r\n          options={{ headerShown: false }}\r\n          initialParams={{ loginData: loginData }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"Registration\"\r\n          component={RegistrationScreen}\r\n          options={{ headerShown: false }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"Regiment Selection\"\r\n          component={SelectionScreen}\r\n          options={{ headerShown: false }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"Regiment Editor\"\r\n          component={EditingScreen}\r\n          options={{ headerShown: false }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"Goals\"\r\n          component={GoalsScreen}\r\n          options={{ headerShown: false }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"Workout\"\r\n          component={CurrentExerciseScreen}\r\n          options={{ headerShown: false }}\r\n        />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nfunction RegistrationScreen({ navigation, route }) {\r\n  //each state tracks a different required input field's value\r\n  let [username, setUsername] = useState(\"\");\r\n  let [password, setPassword] = useState(\"\");\r\n  let [confirmPass, setConfrimPass] = useState(\"\");\r\n  let [fName, setFname] = useState(\"\");\r\n  let [lName, setLname] = useState(\"\");\r\n  let [email, setEmail] = useState(\"\");\r\n\r\n  //structure for each user's account information as storred in the loginData array\r\n  let newUser = {\r\n    username: username,\r\n    password: password,\r\n    firstName: fName,\r\n    lastName: lName,\r\n    email: email,\r\n    usrRegiment: [],\r\n    usrGoals: [[], [], [], []],\r\n    usrMaxes: [\r\n      [\"0\", \"0\", \"0\"],\r\n      [\"0\", \"0\", \"0\"],\r\n      [\"0\", \"0\", \"0\"],\r\n      [\"0\", \"0\", \"0\"],\r\n    ],\r\n  };\r\n  let flags = [false, false, false, false];\r\n  let gate = 0;\r\n  let nameRegEx = /^[^\\d=?\\\\/@#%^&*()]+$/;\r\n  let emailRegEx =\r\n    /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\r\n\r\n  function validateEmail(value) {\r\n    let error;\r\n    if (!value) {\r\n      error = \"\";\r\n    } else if (!emailRegEx.test(value)) {\r\n      error = \"Invalid email\";\r\n    } else {\r\n      error = \"\";\r\n      flags[3] = true;\r\n    }\r\n    return error;\r\n  }\r\n  function validateName(value) {\r\n    let error;\r\n    if (!value) {\r\n      error = \"\";\r\n    } else if (!nameRegEx.test(value)) {\r\n      error = \"Invalid\";\r\n    } else {\r\n      flags[0] = true;\r\n    }\r\n    return error;\r\n  }\r\n  function validatePassword(value) {\r\n    let error;\r\n    if (!value) {\r\n      error = \"\";\r\n    } else if (!/[A-Z]/.test(value)) {\r\n      error = \"Please add uppercase letter\";\r\n    } else if (!/[0-9]/.test(value)) {\r\n      error = \"Please add a number\";\r\n    } else {\r\n      flags[1] = true;\r\n    }\r\n    return error;\r\n  }\r\n  function validateConfirmPass(value) {\r\n    let error;\r\n    if (password !== value) {\r\n      error = \"Passwords do not match\";\r\n    } else if (!value) {\r\n      error = \"\";\r\n    } else {\r\n      error = \"\";\r\n      flags[2] = true;\r\n    }\r\n    return error;\r\n  }\r\n  return (\r\n    <>\r\n      <View style={styles.container}>\r\n        <Text style={styles.instruction}>\r\n          Please fill out the required fields below.\r\n        </Text>\r\n        <View style={styles.inputGroup}>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"First Name\"\r\n            onChangeText={setFname}\r\n            errorMessage={validateName(fName)}\r\n          ></TextInput>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Last Name\"\r\n            onChangeText={setLname}\r\n            errorMessage={validateName(lName)}\r\n          ></TextInput>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Username\"\r\n            onChangeText={setUsername}\r\n          ></TextInput>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Password\"\r\n            onChangeText={setPassword}\r\n            errorMessage={validatePassword(password)}\r\n          ></TextInput>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Confirm Password\"\r\n            onChangeText={setConfrimPass}\r\n            errorMessage={validateConfirmPass(confirmPass)}\r\n          ></TextInput>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Email\"\r\n            onChangeText={setEmail}\r\n            onBlur={() => {\r\n              let result = validateEmail(email);\r\n              return result;\r\n            }}\r\n            errorMessage={validateEmail(email)}\r\n          ></TextInput>\r\n        </View>\r\n        <View style={styles.buttonGroup1}>\r\n          <Pressable\r\n            style={styles.logButton}\r\n            testID=\"register-button\"\r\n            onPress={() => {\r\n              for (var i = 0; i < flags.length; i++) {\r\n                if (flags[i] == true) {\r\n                  gate = gate + 1;\r\n                }\r\n              }\r\n              if (gate != flags.length) {\r\n                alert(\"All fields must be filled in correctly.\");\r\n              } else {\r\n                loginData.pop();\r\n                loginData.push(newUser);\r\n                navigation.navigate(\"Regiment Selection\", {\r\n                  loginData: loginData,\r\n                });\r\n              }\r\n            }}\r\n          >\r\n            <Text style={styles.logButtonFont}>Sign Up</Text>\r\n          </Pressable>\r\n          <Pressable\r\n            style={styles.returnButton}\r\n            onPress={() => {\r\n              navigation.navigate(\"Login\");\r\n            }}\r\n          >\r\n            <Text style={styles.returnButtonFont}>Return</Text>\r\n          </Pressable>\r\n        </View>\r\n      </View>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction EditingScreen({ navigation, route }) {\r\n  let { loginData } = route.params;\r\n  let indicies = [];\r\n\r\n  //use state that tracks if the user has saved any goals\r\n  let [saved, setSave] = useState(true);\r\n\r\n  if (loginData[0].usrRegiment.length != 0) {\r\n    indicies = loginData[0].usrRegiment[0];\r\n  } else {\r\n    indicies = [0, 1, 2, 3, 4, 0, 1];\r\n  }\r\n\r\n  //each scrollRef tracks the position of a different day of the week slider\r\n  const scrollRef1 = React.useRef(null);\r\n  const scrollRef2 = React.useRef(null);\r\n  const scrollRef3 = React.useRef(null);\r\n  const scrollRef4 = React.useRef(null);\r\n  const scrollRef5 = React.useRef(null);\r\n  const scrollRef6 = React.useRef(null);\r\n  const scrollRef7 = React.useRef(null);\r\n\r\n  let newRegiment = [];\r\n\r\n  function handleSelections(value) {\r\n    switch (value) {\r\n      case 0:\r\n        return 0;\r\n      case 1:\r\n        return 1;\r\n      case 2:\r\n        return 2;\r\n      case 3:\r\n        return 3;\r\n      case 4:\r\n        return 4;\r\n    }\r\n  }\r\n\r\n  const regDays = [\"Push\", \"Pull\", \"Legs\", \"Shoulders\", \"Rest\"];\r\n  return (\r\n    <>\r\n      <SafeAreaView style={styles.container2}>\r\n        <Text style={{ fontWeight: \"bold\", textAlign: \"center\", fontSize: 20 }}>\r\n          Swipe the white lines to edit.\r\n        </Text>\r\n        <Text style={styles.label}>Sunday</Text>\r\n        <SwiperFlatList\r\n          ref={scrollRef1}\r\n          index={indicies[0]}\r\n          data={regDays}\r\n          renderItem={({ item }) => (\r\n            <View style={styles.slider}>\r\n              <Text style={styles.text}>{item}</Text>\r\n            </View>\r\n          )}\r\n        />\r\n        <Text style={styles.label}>Monday</Text>\r\n\r\n        <SwiperFlatList\r\n          ref={scrollRef2}\r\n          index={indicies[1]}\r\n          data={regDays}\r\n          renderItem={({ item }) => (\r\n            <View style={styles.slider}>\r\n              <Text style={styles.text}>{item}</Text>\r\n            </View>\r\n          )}\r\n        />\r\n        <Text style={styles.label}>Tuesday</Text>\r\n        <SwiperFlatList\r\n          ref={scrollRef3}\r\n          index={indicies[2]}\r\n          data={regDays}\r\n          renderItem={({ item }) => (\r\n            <View style={styles.slider}>\r\n              <Text style={styles.text}>{item}</Text>\r\n            </View>\r\n          )}\r\n        />\r\n        <Text style={styles.label}>Wednesday</Text>\r\n        <SwiperFlatList\r\n          ref={scrollRef4}\r\n          index={indicies[3]}\r\n          data={regDays}\r\n          renderItem={({ item }) => (\r\n            <View style={styles.slider}>\r\n              <Text style={styles.text}>{item}</Text>\r\n            </View>\r\n          )}\r\n        />\r\n        <Text style={styles.label}>Thursday</Text>\r\n        <SwiperFlatList\r\n          ref={scrollRef5}\r\n          index={indicies[4]}\r\n          data={regDays}\r\n          renderItem={({ item }) => (\r\n            <View style={styles.slider}>\r\n              <Text style={styles.text}>{item}</Text>\r\n            </View>\r\n          )}\r\n        />\r\n        <Text style={styles.label}>Friday</Text>\r\n        <SwiperFlatList\r\n          ref={scrollRef6}\r\n          index={indicies[0]}\r\n          data={regDays}\r\n          renderItem={({ item }) => (\r\n            <View style={styles.slider}>\r\n              <Text style={styles.text}>{item}</Text>\r\n            </View>\r\n          )}\r\n        />\r\n        <Text style={styles.label}>Saturday</Text>\r\n        <SwiperFlatList\r\n          ref={scrollRef7}\r\n          index={indicies[1]}\r\n          data={regDays}\r\n          renderItem={({ item }) => (\r\n            <View style={styles.slider}>\r\n              <Text style={styles.text}>{item}</Text>\r\n            </View>\r\n          )}\r\n        />\r\n        <View style={styles.buttonGroup1}>\r\n          <Pressable\r\n            style={styles.saveButton}\r\n            onPress={() => {\r\n              let selections = [\r\n                scrollRef1.current.getCurrentIndex(),\r\n                scrollRef2.current.getCurrentIndex(),\r\n                scrollRef3.current.getCurrentIndex(),\r\n                scrollRef4.current.getCurrentIndex(),\r\n                scrollRef5.current.getCurrentIndex(),\r\n                scrollRef6.current.getCurrentIndex(),\r\n                scrollRef7.current.getCurrentIndex(),\r\n              ];\r\n              console.log(selections);\r\n              newRegiment = selections.map(handleSelections);\r\n              if (loginData[0].usrRegiment.length != 0) {\r\n                clearArray(loginData[0].usrRegiment);\r\n                loginData[0].usrRegiment.push(newRegiment);\r\n              } else {\r\n                loginData[0].usrRegiment.push(newRegiment);\r\n              }\r\n              setSave(false);\r\n            }}\r\n          >\r\n            <Text style={styles.saveButtonFont}>Save Regiment</Text>\r\n          </Pressable>\r\n          <Pressable\r\n            style={saved ? styles.disabledButton : styles.returnButton3}\r\n            disabled={saved}\r\n            onPress={() => {\r\n              navigation.navigate(\"Regiment Selection\", {\r\n                loginData: loginData,\r\n              });\r\n            }}\r\n          >\r\n            <Text style={styles.returnButtonFont2}>Workout Selection</Text>\r\n          </Pressable>\r\n        </View>\r\n      </SafeAreaView>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction SelectionScreen({ navigation, route }) {\r\n  let { loginData } = route.params;\r\n\r\n  //useStates which check if a new user has made a regiment or set goals, keeps them from launching a wokrout if true\r\n  let [madeReg, updateMadeReg] = useState(true);\r\n  let [madeGoals, updateMadeGoals] = useState(true);\r\n\r\n  //useEffects check if a user has created goals and/or a regiment\r\n  useEffect(() => {\r\n    if (loginData[0].usrRegiment.length != 0) {\r\n      updateMadeReg(false);\r\n    } else {\r\n      console.log(\"current user has made no regiment\");\r\n    }\r\n    if (loginData[0].usrGoals[0].length != 0) {\r\n      updateMadeGoals(false);\r\n    } else {\r\n      console.log(\"current user has not set any goals\");\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <View style={styles.container}>\r\n        <View style={styles.buttonGroup2}>\r\n          <Pressable\r\n            style={\r\n              madeReg || madeGoals\r\n                ? styles.listButtonDisabledTop\r\n                : styles.listButtonTop\r\n            }\r\n            disabled={madeReg || madeGoals}\r\n            onPress={() => {\r\n              navigation.navigate(\"Workout\", { loginData: loginData });\r\n            }}\r\n          >\r\n            <Text style={styles.listButtonFont}>Begin Custom Workout</Text>\r\n          </Pressable>\r\n          <Pressable\r\n            style={madeReg ? styles.listButtonDisabled : styles.listButton}\r\n            disabled={madeReg}\r\n            onPress={() => {\r\n              navigation.navigate(\"Goals\", { loginData: loginData });\r\n            }}\r\n          >\r\n            <Text style={styles.listButtonFont}>\r\n              {madeGoals ? \"Set Goals\" : \"View Goals\"}\r\n            </Text>\r\n          </Pressable>\r\n          <Pressable\r\n            style={styles.listButton}\r\n            onPress={() => {\r\n              navigation.navigate(\"Regiment Editor\", { loginData: loginData });\r\n            }}\r\n          >\r\n            <Text style={styles.listButtonFont}>\r\n              {madeReg ? \"Create Regiment\" : \"Edit Regiment\"}\r\n            </Text>\r\n          </Pressable>\r\n          <Pressable\r\n            style={styles.returnButton2}\r\n            onPress={() => {\r\n              navigation.navigate(\"Login\");\r\n            }}\r\n          >\r\n            <Text style={styles.returnButtonFont}>Log Out</Text>\r\n          </Pressable>\r\n        </View>\r\n      </View>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction GoalsScreen({ navigation, route }) {\r\n  let { loginData } = route.params;\r\n\r\n  //destructuring each set of Goals and Maxes stored as array's in loginData\r\n  let usrPushGoals = loginData[0].usrGoals[0];\r\n  let usrPullGoals = loginData[0].usrGoals[1];\r\n  let usrLegGoals = loginData[0].usrGoals[2];\r\n  let usrShoGoals = loginData[0].usrGoals[3];\r\n\r\n  let usrPushMaxes = loginData[0].usrMaxes[0];\r\n  let usrPullMaxes = loginData[0].usrMaxes[1];\r\n  let usrLegMaxes = loginData[0].usrMaxes[2];\r\n  let usrShoMaxes = loginData[0].usrMaxes[3];\r\n\r\n  //each useState stores the user's entered goal for given exercise\r\n  let [goal1, setGoal1] = useState();\r\n  let [goal2, setGoal2] = useState();\r\n  let [goal3, setGoal3] = useState();\r\n\r\n  //states maintaining which the user's current goals are displayed (push, pull, legs,or shoulders) as well as the exercises within each group\r\n  let [dispGoals, setDispGoals] = useState([]);\r\n  let [dispMaxes, setDispMaxes] = useState([]);\r\n  let [dispExercise, setDispExercise] = useState([]);\r\n  let [curGroup, setCurGroup] = useState(\"No Group Selected\");\r\n\r\n  let [gate, openGate] = useState(true);\r\n\r\n  return (\r\n    <>\r\n      <View style={styles.container}>\r\n        <View style={styles.goalsInputGroup}>\r\n          <Text style={styles.instruction}>\r\n            Select a group to view and edit.\r\n          </Text>\r\n          <View style={styles.buttonGroup1}>\r\n            <Pressable\r\n              style={styles.button}\r\n              onPress={() => {\r\n                setCurGroup(\"Save Push Workout Goals\");\r\n                setDispGoals(usrPushGoals);\r\n                setDispMaxes(usrPushMaxes);\r\n                setDispExercise([\r\n                  \"Incline Benchpress\",\r\n                  \"Flat Benchpress\",\r\n                  \"Chest Flys\",\r\n                ]);\r\n                setGoal1(0);\r\n                setGoal2(0);\r\n                setGoal3(0);\r\n                openGate(false);\r\n              }}\r\n            >\r\n              <Text style={styles.buttonFont}>Push</Text>\r\n            </Pressable>\r\n            <Pressable\r\n              style={styles.button}\r\n              onPress={() => {\r\n                setCurGroup(\"Save Pull Workout Goals\");\r\n                setDispGoals(usrPullGoals);\r\n                setDispMaxes(usrPullMaxes);\r\n                setDispExercise([\r\n                  \"Barbell Rows\",\r\n                  \"Lat Pull Down\",\r\n                  \"Cable Rows\",\r\n                ]);\r\n                setGoal1(0);\r\n                setGoal2(0);\r\n                setGoal3(0);\r\n                openGate(false);\r\n              }}\r\n            >\r\n              <Text style={styles.buttonFont}>Pull</Text>\r\n            </Pressable>\r\n          </View>\r\n          <View style={styles.buttonGroup1}>\r\n            <Pressable\r\n              style={styles.button}\r\n              onPress={() => {\r\n                setCurGroup(\"Save Leg Workout Goals\");\r\n                setDispGoals(usrLegGoals);\r\n                setDispMaxes(usrLegMaxes);\r\n                setDispExercise([\"Front Squat\", \"Back Squat\", \"Deadlift\"]);\r\n                setGoal1(0);\r\n                setGoal2(0);\r\n                setGoal3(0);\r\n                openGate(false);\r\n              }}\r\n            >\r\n              <Text style={styles.buttonFont}>Legs</Text>\r\n            </Pressable>\r\n            <Pressable\r\n              style={styles.button}\r\n              onPress={() => {\r\n                setCurGroup(\"Save Shoulder Workout Goals\");\r\n                setDispGoals(usrShoGoals);\r\n                setDispMaxes(usrShoMaxes);\r\n                setDispExercise([\r\n                  \"Lateral Raise\",\r\n                  \"Overhead Press\",\r\n                  \"Face Pulls\",\r\n                ]);\r\n                setGoal1(0);\r\n                setGoal2(0);\r\n                setGoal3(0);\r\n                openGate(false);\r\n              }}\r\n            >\r\n              <Text style={styles.buttonFont}>Shoulders</Text>\r\n            </Pressable>\r\n          </View>\r\n          <Text style={styles.label}>{dispExercise[0]}</Text>\r\n          <View style={styles.goalsGroup}>\r\n            <Text style={styles.goalsText}>\r\n              Max -\r\n              <Text style={{ fontWeight: \"bold\" }}>{dispMaxes[0]}lbs.</Text>\r\n            </Text>\r\n            <Text style={styles.goalsText}>\r\n              Goal -\r\n              <Text style={{ fontWeight: \"bold\" }}>{dispGoals[0]}lbs.</Text>\r\n            </Text>\r\n          </View>\r\n          <TextInput\r\n            style={styles.goalsInput}\r\n            onChangeText={setGoal1}\r\n          ></TextInput>\r\n          <Text style={styles.label}>{dispExercise[1]}</Text>\r\n          <View style={styles.goalsGroup}>\r\n            <Text style={styles.goalsText}>\r\n              Max -\r\n              <Text style={{ fontWeight: \"bold\" }}>{dispMaxes[1]}lbs.</Text>\r\n            </Text>\r\n            <Text style={styles.goalsText}>\r\n              Goal -\r\n              <Text style={{ fontWeight: \"bold\" }}>{dispGoals[1]}lbs.</Text>\r\n            </Text>\r\n          </View>\r\n          <TextInput\r\n            style={styles.goalsInput}\r\n            onChangeText={setGoal2}\r\n          ></TextInput>\r\n          <Text style={styles.label}>{dispExercise[2]}</Text>\r\n          <View style={styles.goalsGroup}>\r\n            <Text style={styles.goalsText}>\r\n              Max -\r\n              <Text style={{ fontWeight: \"bold\" }}>{dispMaxes[2]}lbs.</Text>\r\n            </Text>\r\n            <Text style={styles.goalsText}>\r\n              Goal -\r\n              <Text style={{ fontWeight: \"bold\" }}>{dispGoals[2]}lbs.</Text>\r\n            </Text>\r\n          </View>\r\n          <TextInput\r\n            style={styles.goalsInput}\r\n            onChangeText={setGoal3}\r\n          ></TextInput>\r\n        </View>\r\n        <View style={styles.buttonGroup1}>\r\n          <Pressable\r\n            style={styles.saveButton}\r\n            disabled={gate}\r\n            onPress={() => {\r\n              if (curGroup == \"Save Push Workout Goals\") {\r\n                clearArray(loginData[0].usrGoals[0]);\r\n                loginData[0].usrGoals[0].push(goal1, goal2, goal3);\r\n              } else if (curGroup == \"Save Pull Workout Goals\") {\r\n                clearArray(loginData[0].usrGoals[1]);\r\n                loginData[0].usrGoals[1].push(goal1, goal2, goal3);\r\n              } else if (curGroup == \"Save Leg Workout Goals\") {\r\n                clearArray(loginData[0].usrGoals[2]);\r\n                loginData[0].usrGoals[2].push(goal1, goal2, goal3);\r\n              } else if (curGroup == \"Save Shoulder Workout Goals\") {\r\n                clearArray(loginData[0].usrGoals[3]);\r\n                loginData[0].usrGoals[3].push(goal1, goal2, goal3);\r\n              }\r\n              openGate(true);\r\n            }}\r\n          >\r\n            <Text style={styles.saveButtonFont}>{curGroup}</Text>\r\n          </Pressable>\r\n          <Pressable\r\n            style={styles.returnButton3}\r\n            onPress={() => {\r\n              navigation.navigate(\"Regiment Selection\", {\r\n                loginData: loginData,\r\n              });\r\n            }}\r\n          >\r\n            <Text style={styles.returnButtonFont2}>Workout Selection</Text>\r\n          </Pressable>\r\n        </View>\r\n      </View>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction CurrentExerciseScreen({ navigation, route }) {\r\n  let { loginData } = route.params;\r\n\r\n  //similar destructuring as in GoalsScreen\r\n  let usrPushGoals = loginData[0].usrGoals[0];\r\n  let usrPullGoals = loginData[0].usrGoals[1];\r\n  let usrLegGoals = loginData[0].usrGoals[2];\r\n  let usrShoGoals = loginData[0].usrGoals[3];\r\n\r\n  let usrPushMaxes = loginData[0].usrMaxes[0];\r\n  let usrPullMaxes = loginData[0].usrMaxes[1];\r\n  let usrLegMaxes = loginData[0].usrMaxes[2];\r\n  let usrShoMaxes = loginData[0].usrMaxes[3];\r\n\r\n  let [reps, setReps] = useState(0);\r\n\r\n  let usrReg = loginData[0].usrRegiment;\r\n  const d = new Date();\r\n  let day = d.getDay();\r\n  let regIndex = usrReg[0][day];\r\n\r\n  //each useState tracks the weight a given user has entered for given exercise in the order\r\n  let [curWeight1, setCurWeight1] = useState();\r\n  let [curWeight2, setCurWeight2] = useState();\r\n  let [curWeight3, setCurWeight3] = useState();\r\n\r\n  let newMax1;\r\n  let newMax2;\r\n  let newMax3;\r\n\r\n  switch (regIndex) {\r\n    case 0:\r\n      const pushUps = 0;\r\n      const inclineBench = 1;\r\n      const flatBench = 2;\r\n      const chestFly = 3;\r\n      let [curPush, setCurPush] = useState(pushUps);\r\n\r\n      if (curPush === pushUps) {\r\n        return (\r\n          <>\r\n            <View style={styles.container}>\r\n              <Text style={styles.instruction}>\r\n                Warmp up your push group with some Push Ups.\r\n              </Text>\r\n              <View style={styles.counterGroup}>\r\n                <Text style={styles.counter}>{reps}</Text>\r\n                <View style={styles.buttonGroup1}>\r\n                  <Pressable\r\n                    style={styles.rep1Button}\r\n                    onPress={() => {\r\n                      setReps(reps + 1);\r\n                    }}\r\n                  >\r\n                    <Text style={styles.rep1ButtonFont}>+1 Rep</Text>\r\n                  </Pressable>\r\n                  <Pressable\r\n                    style={styles.rep0Button}\r\n                    onPress={() => {\r\n                      setReps((reps = 0));\r\n                    }}\r\n                  >\r\n                    <Text style={styles.rep0ButtonFont}>Set Reps to 0</Text>\r\n                  </Pressable>\r\n                </View>\r\n                <Pressable\r\n                  style={styles.nextButton}\r\n                  onPress={() => {\r\n                    setCurPush(inclineBench);\r\n                    setReps((reps = 0));\r\n                  }}\r\n                >\r\n                  <Text style={styles.nextButtonFont}>Next Exercise</Text>\r\n                </Pressable>\r\n              </View>\r\n              <Pressable\r\n                style={styles.returnButton4}\r\n                onPress={() => {\r\n                  navigation.navigate(\"Regiment Selection\", {\r\n                    loginData: loginData,\r\n                  });\r\n                }}\r\n              >\r\n                <Text style={styles.returnButtonFont3}>\r\n                  Return to Workout Selection\r\n                </Text>\r\n              </Pressable>\r\n            </View>\r\n          </>\r\n        );\r\n      } else if (curPush === inclineBench) {\r\n        return (\r\n          <>\r\n            <View style={styles.container}>\r\n              <Text style={styles.instruction}>\r\n                Exercise 1: Incline Benchpress\r\n              </Text>\r\n              <View style={styles.counterGroup}>\r\n                <TextInput\r\n                  style={styles.weightInput}\r\n                  placeholder=\"press to add weight\"\r\n                  onChangeText={setCurWeight1}\r\n                ></TextInput>\r\n                <Text style={styles.goalsText}>\r\n                  Current Goal:{\" \"}\r\n                  <Text style={{ fontWeight: \"bold\" }}>\r\n                    {usrPushGoals[0]}lbs.\r\n                  </Text>\r\n                </Text>\r\n                <Text style={styles.goalsText}>\r\n                  Previous Max:{\" \"}\r\n                  <Text style={{ fontWeight: \"bold\" }}>\r\n                    {usrPushMaxes[0]}lbs.\r\n                  </Text>\r\n                </Text>\r\n                <Text style={styles.counter}>{reps}</Text>\r\n                <View style={styles.buttonGroup1}>\r\n                  <Pressable\r\n                    style={styles.rep1Button}\r\n                    onPress={() => {\r\n                      setReps(reps + 1);\r\n                    }}\r\n                  >\r\n                    <Text style={styles.rep1ButtonFont}>+1 Rep</Text>\r\n                  </Pressable>\r\n                  <Pressable\r\n                    style={styles.rep0Button}\r\n                    onPress={() => {\r\n                      setReps((reps = 0));\r\n                    }}\r\n                  >\r\n                    <Text style={styles.rep0ButtonFont}>Set Reps to 0</Text>\r\n                  </Pressable>\r\n                </View>\r\n                <Pressable\r\n                  style={styles.nextButton}\r\n                  onPress={() => {\r\n                    setCurPush(flatBench);\r\n                    setReps((reps = 0));\r\n                  }}\r\n                >\r\n                  <Text style={styles.nextButtonFont}>Next Exercise</Text>\r\n                </Pressable>\r\n              </View>\r\n              <Pressable\r\n                style={styles.returnButton4}\r\n                onPress={() => {\r\n                  navigation.navigate(\"Regiment Selection\", {\r\n                    loginData: loginData,\r\n                  });\r\n                }}\r\n              >\r\n                <Text style={styles.returnButtonFont3}>\r\n                  Return to Workout Selection\r\n                </Text>\r\n              </Pressable>\r\n            </View>\r\n          </>\r\n        );\r\n      } else if (curPush === flatBench) {\r\n        return (\r\n          <>\r\n            <View style={styles.container}>\r\n              <Text style={styles.instruction}>\r\n                Exercise 2: Flat Benchpress\r\n              </Text>\r\n              <View style={styles.counterGroup}>\r\n                <TextInput\r\n                  style={styles.weightInput}\r\n                  placeholder=\"press to add weight\"\r\n                  onChangeText={setCurWeight2}\r\n                ></TextInput>\r\n                <Text style={styles.goalsText}>\r\n                  Current Goal:{\" \"}\r\n                  <Text style={{ fontWeight: \"bold\" }}>\r\n                    {usrPushGoals[1]}lbs.\r\n                  </Text>\r\n                </Text>\r\n                <Text style={styles.goalsText}>\r\n                  Previous Max:{\" \"}\r\n                  <Text style={{ fontWeight: \"bold\" }}>\r\n                    {usrPushMaxes[1]}lbs.\r\n                  </Text>\r\n                </Text>\r\n                <Text style={styles.counter}>{reps}</Text>\r\n                <View style={styles.buttonGroup1}>\r\n                  <Pressable\r\n                    style={styles.rep1Button}\r\n                    onPress={() => {\r\n                      setReps(reps + 1);\r\n                    }}\r\n                  >\r\n                    <Text style={styles.rep1ButtonFont}>+1 Rep</Text>\r\n                  </Pressable>\r\n                  <Pressable\r\n                    style={styles.rep0Button}\r\n                    onPress={() => {\r\n                      setReps((reps = 0));\r\n                    }}\r\n                  >\r\n                    <Text style={styles.rep0ButtonFont}>Set Reps to 0</Text>\r\n                  </Pressable>\r\n                </View>\r\n                <Pressable\r\n                  style={styles.nextButton}\r\n                  onPress={() => {\r\n                    setCurPush(chestFly);\r\n                    setReps((reps = 0));\r\n                  }}\r\n                >\r\n                  <Text style={styles.nextButtonFont}>Next Exercise</Text>\r\n                </Pressable>\r\n              </View>\r\n              <Pressable\r\n                style={styles.returnButton4}\r\n                onPress={() => {\r\n                  navigation.navigate(\"Regiment Selection\", {\r\n                    loginData: loginData,\r\n                  });\r\n                }}\r\n              >\r\n                <Text style={styles.returnButtonFont3}>\r\n                  Return to Workout Selection\r\n                </Text>\r\n              </Pressable>\r\n            </View>\r\n          </>\r\n        );\r\n      } else if (curPush === chestFly) {\r\n        return (\r\n          <>\r\n            <View style={styles.container}>\r\n              <Text style={styles.instruction}>Exercise 3: Chest Flys</Text>\r\n              <View style={styles.counterGroup}>\r\n                <TextInput\r\n                  style={styles.weightInput}\r\n                  placeholder=\"press to add weight\"\r\n                  onChangeText={setCurWeight3}\r\n                ></TextInput>\r\n                <Text style={styles.goalsText}>\r\n                  Current Goal:{\" \"}\r\n                  <Text style={{ fontWeight: \"bold\" }}>\r\n                    {usrPushGoals[2]}lbs.\r\n                  </Text>\r\n                </Text>\r\n                <Text style={styles.goalsText}>\r\n                  Previous Max:{\" \"}\r\n                  <Text style={{ fontWeight: \"bold\" }}>\r\n                    {usrPushMaxes[2]}lbs.\r\n                  </Text>\r\n                </Text>\r\n                <Text style={styles.counter}>{reps}</Text>\r\n                <View style={styles.buttonGroup1}>\r\n                  <Pressable\r\n                    style={styles.rep1Button}\r\n                    onPress={() => {\r\n                      setReps(reps + 1);\r\n                    }}\r\n                  >\r\n                    <Text style={styles.rep1ButtonFont}>+1 Rep</Text>\r\n                  </Pressable>\r\n                  <Pressable\r\n                    style={styles.rep0Button}\r\n                    onPress={() => {\r\n                      setReps((reps = 0));\r\n                    }}\r\n                  >\r\n                    <Text style={styles.rep0ButtonFont}>Set Reps to 0</Text>\r\n                  </Pressable>\r\n                </View>\r\n                <Pressable\r\n                  style={styles.nextButton}\r\n                  onPress={() => {\r\n                    setReps((reps = 0));\r\n                    if (Number(curWeight3) > Number(usrPushMaxes[2])) {\r\n                      newMax3 = curWeight3;\r\n                      console.log(\"new max achieved!\");\r\n                    } else {\r\n                      newMax3 = usrPushMaxes[2];\r\n                      console.log(\"almost there\");\r\n                    }\r\n                    if (Number(curWeight2) > Number(usrPushMaxes[1])) {\r\n                      newMax2 = curWeight2;\r\n                      console.log(\"new max achieved!\");\r\n                    } else {\r\n                      newMax2 = usrPushMaxes[1];\r\n                      console.log(\"almost there\");\r\n                    }\r\n                    if (Number(curWeight1) > Number(usrPushMaxes[0])) {\r\n                      newMax1 = curWeight1;\r\n                      console.log(\"new max achieved!\");\r\n                    } else {\r\n                      newMax1 = usrPushMaxes[0];\r\n                      console.log(\"almost there\");\r\n                    }\r\n                    clearArray(loginData[0].usrMaxes[0]);\r\n                    loginData[0].usrMaxes[0].push(newMax1);\r\n                    loginData[0].usrMaxes[0].push(newMax2);\r\n                    loginData[0].usrMaxes[0].push(newMax3);\r\n\r\n                    navigation.navigate(\"Regiment Selection\", {\r\n                      loginData: loginData,\r\n                    });\r\n                  }}\r\n                >\r\n                  <Text style={styles.nextButtonFont}>Complete Workout</Text>\r\n                </Pressable>\r\n              </View>\r\n            </View>\r\n          </>\r\n        );\r\n      }\r\n    case 1:\r\n      const pullUps = 0;\r\n      const barbellRows = 1;\r\n      const pullDowns = 2;\r\n      const cableRows = 3;\r\n      let [curPull, setCurPull] = useState(pullUps);\r\n\r\n      if (curPull === pullUps) {\r\n        return (\r\n          <>\r\n            <View style={styles.container}>\r\n              <Text style={styles.instruction}>\r\n                Warmp up your pull group with some Pull Ups.\r\n              </Text>\r\n              <View style={styles.counterGroup}>\r\n                <Text style={styles.counter}>{reps}</Text>\r\n                <View style={styles.buttonGroup1}>\r\n                  <Pressable\r\n                    style={styles.rep1Button}\r\n                    onPress={() => {\r\n                      setReps(reps + 1);\r\n                    }}\r\n                  >\r\n                    <Text style={styles.rep1ButtonFont}>+1 Rep</Text>\r\n                  </Pressable>\r\n                  <Pressable\r\n                    style={styles.rep0Button}\r\n                    onPress={() => {\r\n                      setReps((reps = 0));\r\n                    }}\r\n                  >\r\n                    <Text style={styles.rep0ButtonFont}>Set Reps to 0</Text>\r\n                  </Pressable>\r\n                </View>\r\n                <Pressable\r\n                  style={styles.nextButton}\r\n                  onPress={() => {\r\n                    setCurPull(barbellRows);\r\n                    setReps((reps = 0));\r\n                  }}\r\n                >\r\n                  <Text style={styles.nextButtonFont}>Next Exercise</Text>\r\n                </Pressable>\r\n              </View>\r\n              <Pressable\r\n                style={styles.returnButton4}\r\n                onPress={() => {\r\n                  navigation.navigate(\"Regiment Selection\", {\r\n                    loginData: loginData,\r\n                  });\r\n                }}\r\n              >\r\n                <Text style={styles.returnButtonFont3}>\r\n                  Return to Workout Selection\r\n                </Text>\r\n              </Pressable>\r\n            </View>\r\n          </>\r\n        );\r\n      } else if (curPull === barbellRows) {\r\n        return (\r\n          <>\r\n            <View style={styles.container}>\r\n              <Text style={styles.instruction}>Exercise 1: Barbell Rows</Text>\r\n              <View style={styles.counterGroup}>\r\n                <TextInput\r\n                  style={styles.weightInput}\r\n                  placeholder=\"press to add weight\"\r\n                  onChangeText={setCurWeight1}\r\n                ></TextInput>\r\n                <Text style={styles.goalsText}>\r\n                  Current Goal:{\" \"}\r\n                  <Text style={{ fontWeight: \"bold\" }}>\r\n                    {usrPullGoals[0]}lbs.\r\n                  </Text>\r\n                </Text>\r\n                <Text style={styles.goalsText}>\r\n                  Previous Max:{\" \"}\r\n                  <Text style={{ fontWeight: \"bold\" }}>\r\n                    {usrPullMaxes[0]}lbs.\r\n                  </Text>\r\n                </Text>\r\n                <Text style={styles.counter}>{reps}</Text>\r\n                <View style={styles.buttonGroup1}>\r\n                  <Pressable\r\n                    style={styles.rep1Button}\r\n                    onPress={() => {\r\n                      setReps(reps + 1);\r\n                    }}\r\n                  >\r\n                    <Text style={styles.rep1ButtonFont}>+1 Rep</Text>\r\n                  </Pressable>\r\n                  <Pressable\r\n                    style={styles.rep0Button}\r\n                    onPress={() => {\r\n                      setReps((reps = 0));\r\n                    }}\r\n                  >\r\n                    <Text style={styles.rep0ButtonFont}>Set Reps to 0</Text>\r\n                  </Pressable>\r\n                </View>\r\n                <Pressable\r\n                  style={styles.nextButton}\r\n                  onPress={() => {\r\n                    setCurPull(pullDowns);\r\n                    setReps((reps = 0));\r\n                  }}\r\n                >\r\n                  <Text style={styles.nextButtonFont}>Next Exercise</Text>\r\n                </Pressable>\r\n              </View>\r\n              <Pressable\r\n                style={styles.returnButton4}\r\n                onPress={() => {\r\n                  navigation.navigate(\"Regiment Selection\", {\r\n                    loginData: loginData,\r\n                  });\r\n                }}\r\n              >\r\n                <Text style={styles.returnButtonFont3}>\r\n                  Return to Workout Selection\r\n                </Text>\r\n              </Pressable>\r\n            </View>\r\n          </>\r\n        );\r\n      } else if (curPull === pullDowns) {\r\n        return (\r\n          <>\r\n            <View style={styles.container}>\r\n              <Text style={styles.instruction}>Exercise 2: Lat Pull Downs</Text>\r\n              <View style={styles.counterGroup}>\r\n                <TextInput\r\n                  style={styles.weightInput}\r\n                  placeholder=\"press to add weight\"\r\n                  onChangeText={setCurWeight2}\r\n                ></TextInput>\r\n                <Text style={styles.goalsText}>\r\n                  Current Goal:{\" \"}\r\n                  <Text style={{ fontWeight: \"bold\" }}>\r\n                    {usrPullGoals[1]}lbs.\r\n                  </Text>\r\n                </Text>\r\n                <Text style={styles.goalsText}>\r\n                  Previous Max:{\" \"}\r\n                  <Text style={{ fontWeight: \"bold\" }}>\r\n                    {usrPullMaxes[1]}lbs.\r\n                  </Text>\r\n                </Text>\r\n                <Text style={styles.counter}>{reps}</Text>\r\n                <View style={styles.buttonGroup1}>\r\n                  <Pressable\r\n                    style={styles.rep1Button}\r\n                    onPress={() => {\r\n                      setReps(reps + 1);\r\n                    }}\r\n                  >\r\n                    <Text style={styles.rep1ButtonFont}>+1 Rep</Text>\r\n                  </Pressable>\r\n                  <Pressable\r\n                    style={styles.rep0Button}\r\n                    onPress={() => {\r\n                      setReps((reps = 0));\r\n                    }}\r\n                  >\r\n                    <Text style={styles.rep0ButtonFont}>Set Reps to 0</Text>\r\n                  </Pressable>\r\n                </View>\r\n                <Pressable\r\n                  style={styles.nextButton}\r\n                  onPress={() => {\r\n                    setCurPull(cableRows);\r\n                    setReps((reps = 0));\r\n                  }}\r\n                >\r\n                  <Text style={styles.nextButtonFont}>Next Exercise</Text>\r\n                </Pressable>\r\n              </View>\r\n              <Pressable\r\n                style={styles.returnButton4}\r\n                onPress={() => {\r\n                  navigation.navigate(\"Regiment Selection\", {\r\n                    loginData: loginData,\r\n                  });\r\n                }}\r\n              >\r\n                <Text style={styles.returnButtonFont3}>\r\n                  Return to Workout Selection\r\n                </Text>\r\n              </Pressable>\r\n            </View>\r\n          </>\r\n        );\r\n      } else if (curPull === cableRows) {\r\n        return (\r\n          <>\r\n            <View style={styles.container}>\r\n              <Text style={styles.instruction}>Exercise 3: Cable Rows</Text>\r\n              <View style={styles.counterGroup}>\r\n                <TextInput\r\n                  style={styles.weightInput}\r\n                  placeholder=\"press to add weight\"\r\n                  onChangeText={setCurWeight3}\r\n                ></TextInput>\r\n                <Text style={styles.goalsText}>\r\n                  Current Goal:{\" \"}\r\n                  <Text style={{ fontWeight: \"bold\" }}>\r\n                    {usrPullGoals[2]}lbs.\r\n                  </Text>\r\n                </Text>\r\n                <Text style={styles.goalsText}>\r\n                  Previous Max:{\" \"}\r\n                  <Text style={{ fontWeight: \"bold\" }}>\r\n                    {usrPullMaxes[2]}lbs.\r\n                  </Text>\r\n                </Text>\r\n                <Text style={styles.counter}>{reps}</Text>\r\n                <View style={styles.buttonGroup1}>\r\n                  <Pressable\r\n                    style={styles.rep1Button}\r\n                    onPress={() => {\r\n                      setReps(reps + 1);\r\n                    }}\r\n                  >\r\n                    <Text style={styles.rep1ButtonFont}>+1 Rep</Text>\r\n                  </Pressable>\r\n                  <Pressable\r\n                    style={styles.rep0Button}\r\n                    onPress={() => {\r\n                      setReps((reps = 0));\r\n                    }}\r\n                  >\r\n                    <Text style={styles.rep0ButtonFont}>Set Reps to 0</Text>\r\n                  </Pressable>\r\n                </View>\r\n                <Pressable\r\n                  style={styles.nextButton}\r\n                  onPress={() => {\r\n                    setReps((reps = 0));\r\n                    if (Number(curWeight3) > Number(usrPullMaxes[2])) {\r\n                      newMax3 = curWeight3;\r\n                      console.log(\"new max achieved!\");\r\n                    } else {\r\n                      newMax3 = usrPullMaxes[2];\r\n                      console.log(\"almost there\");\r\n                    }\r\n                    if (Number(curWeight2) > Number(usrPullMaxes[1])) {\r\n                      newMax2 = curWeight2;\r\n                      console.log(\"new max achieved!\");\r\n                    } else {\r\n                      newMax2 = usrPullMaxes[1];\r\n                      console.log(\"almost there\");\r\n                    }\r\n                    if (Number(curWeight1) > Number(usrPullMaxes[0])) {\r\n                      newMax1 = curWeight1;\r\n                      console.log(\"new max achieved!\");\r\n                    } else {\r\n                      newMax1 = usrPullMaxes[0];\r\n                      console.log(\"almost there\");\r\n                    }\r\n                    clearArray(loginData[0].usrMaxes[1]);\r\n                    loginData[0].usrMaxes[1].push(newMax3);\r\n                    loginData[0].usrMaxes[1].push(newMax2);\r\n                    loginData[0].usrMaxes[1].push(newMax1);\r\n\r\n                    navigation.navigate(\"Regiment Selection\", {\r\n                      loginData: loginData,\r\n                    });\r\n                  }}\r\n                >\r\n                  <Text style={styles.nextButtonFont}>Complete Workout</Text>\r\n                </Pressable>\r\n              </View>\r\n            </View>\r\n          </>\r\n        );\r\n      }\r\n    case 2:\r\n      const lunges = 0;\r\n      const frontSquats = 1;\r\n      const backSquats = 2;\r\n      const deadlifts = 3;\r\n      let [curLegs, setCurLegs] = useState(lunges);\r\n\r\n      if (curLegs === lunges) {\r\n        return (\r\n          <>\r\n            <View style={styles.container}>\r\n              <Text style={styles.instruction}>\r\n                Warmp up your legs with some Lunges.\r\n              </Text>\r\n              <View style={styles.counterGroup}>\r\n                <Text style={styles.counter}>{reps}</Text>\r\n                <View style={styles.buttonGroup1}>\r\n                  <Pressable\r\n                    style={styles.rep1Button}\r\n                    onPress={() => {\r\n                      setReps(reps + 1);\r\n                    }}\r\n                  >\r\n                    <Text style={styles.rep1ButtonFont}>+1 Rep</Text>\r\n                  </Pressable>\r\n                  <Pressable\r\n                    style={styles.rep0Button}\r\n                    onPress={() => {\r\n                      setReps((reps = 0));\r\n                    }}\r\n                  >\r\n                    <Text style={styles.rep0ButtonFont}>Set Reps to 0</Text>\r\n                  </Pressable>\r\n                </View>\r\n                <Pressable\r\n                  style={styles.nextButton}\r\n                  onPress={() => {\r\n                    setCurLegs(frontSquats);\r\n                    setReps((reps = 0));\r\n                  }}\r\n                >\r\n                  <Text style={styles.nextButtonFont}>Next Exercise</Text>\r\n                </Pressable>\r\n              </View>\r\n              <Pressable\r\n                style={styles.returnButton4}\r\n                onPress={() => {\r\n                  navigation.navigate(\"Regiment Selection\", {\r\n                    loginData: loginData,\r\n                  });\r\n                }}\r\n              >\r\n                <Text style={styles.returnButtonFont3}>\r\n                  Return to Workout Selection\r\n                </Text>\r\n              </Pressable>\r\n            </View>\r\n          </>\r\n        );\r\n      } else if (curLegs === frontSquats) {\r\n        return (\r\n          <>\r\n            <View style={styles.container}>\r\n              <Text style={styles.instruction}>Exercise 1: Front Squats</Text>\r\n              <View style={styles.counterGroup}>\r\n                <TextInput\r\n                  style={styles.weightInput}\r\n                  placeholder=\"press to add weight\"\r\n                  onChangeText={setCurWeight1}\r\n                ></TextInput>\r\n                <Text style={styles.goalsText}>\r\n                  Current Goal:{\" \"}\r\n                  <Text style={{ fontWeight: \"bold\" }}>\r\n                    {usrLegGoals[0]}lbs.\r\n                  </Text>\r\n                </Text>\r\n                <Text style={styles.goalsText}>\r\n                  Previous Max:{\" \"}\r\n                  <Text style={{ fontWeight: \"bold\" }}>\r\n                    {usrLegMaxes[0]}lbs.\r\n                  </Text>\r\n                </Text>\r\n                <Text style={styles.counter}>{reps}</Text>\r\n                <View style={styles.buttonGroup1}>\r\n                  <Pressable\r\n                    style={styles.rep1Button}\r\n                    onPress={() => {\r\n                      setReps(reps + 1);\r\n                    }}\r\n                  >\r\n                    <Text style={styles.rep1ButtonFont}>+1 Rep</Text>\r\n                  </Pressable>\r\n                  <Pressable\r\n                    style={styles.rep0Button}\r\n                    onPress={() => {\r\n                      setReps((reps = 0));\r\n                    }}\r\n                  >\r\n                    <Text style={styles.rep0ButtonFont}>Set Reps to 0</Text>\r\n                  </Pressable>\r\n                </View>\r\n                <Pressable\r\n                  style={styles.nextButton}\r\n                  onPress={() => {\r\n                    setCurLegs(backSquats);\r\n                    setReps((reps = 0));\r\n                  }}\r\n                >\r\n                  <Text style={styles.nextButtonFont}>Next Exercise</Text>\r\n                </Pressable>\r\n              </View>\r\n              <Pressable\r\n                style={styles.returnButton4}\r\n                onPress={() => {\r\n                  navigation.navigate(\"Regiment Selection\", {\r\n                    loginData: loginData,\r\n                  });\r\n                }}\r\n              >\r\n                <Text style={styles.returnButtonFont3}>\r\n                  Return to Workout Selection\r\n                </Text>\r\n              </Pressable>\r\n            </View>\r\n          </>\r\n        );\r\n      } else if (curLegs === backSquats) {\r\n        return (\r\n          <>\r\n            <View style={styles.container}>\r\n              <Text style={styles.instruction}>Exercise 2: Back Squats</Text>\r\n              <View style={styles.counterGroup}>\r\n                <TextInput\r\n                  style={styles.weightInput}\r\n                  placeholder=\"press to add weight\"\r\n                  onChangeText={setCurWeight2}\r\n                ></TextInput>\r\n                <Text style={styles.goalsText}>\r\n                  Current Goal:{\" \"}\r\n                  <Text style={{ fontWeight: \"bold\" }}>\r\n                    {usrLegGoals[1]}lbs.\r\n                  </Text>\r\n                </Text>\r\n                <Text style={styles.goalsText}>\r\n                  Previous Max:{\" \"}\r\n                  <Text style={{ fontWeight: \"bold\" }}>\r\n                    {usrLegMaxes[1]}lbs.\r\n                  </Text>\r\n                </Text>\r\n                <Text style={styles.counter}>{reps}</Text>\r\n                <View style={styles.buttonGroup1}>\r\n                  <Pressable\r\n                    style={styles.rep1Button}\r\n                    onPress={() => {\r\n                      setReps(reps + 1);\r\n                    }}\r\n                  >\r\n                    <Text style={styles.rep1ButtonFont}>+1 Rep</Text>\r\n                  </Pressable>\r\n                  <Pressable\r\n                    style={styles.rep0Button}\r\n                    onPress={() => {\r\n                      setReps((reps = 0));\r\n                    }}\r\n                  >\r\n                    <Text style={styles.rep0ButtonFont}>Set Reps to 0</Text>\r\n                  </Pressable>\r\n                </View>\r\n                <Pressable\r\n                  style={styles.nextButton}\r\n                  onPress={() => {\r\n                    setCurLegs(deadlifts);\r\n                    setReps((reps = 0));\r\n                  }}\r\n                >\r\n                  <Text style={styles.nextButtonFont}>Next Exercise</Text>\r\n                </Pressable>\r\n              </View>\r\n              <Pressable\r\n                style={styles.returnButton4}\r\n                onPress={() => {\r\n                  navigation.navigate(\"Regiment Selection\", {\r\n                    loginData: loginData,\r\n                  });\r\n                }}\r\n              >\r\n                <Text style={styles.returnButtonFont3}>\r\n                  Return to Workout Selection\r\n                </Text>\r\n              </Pressable>\r\n            </View>\r\n          </>\r\n        );\r\n      } else if (curLegs === deadlifts) {\r\n        return (\r\n          <>\r\n            <View style={styles.container}>\r\n              <Text style={styles.instruction}>Exercise 3: Deadlifts</Text>\r\n              <View style={styles.counterGroup}>\r\n                <TextInput\r\n                  style={styles.weightInput}\r\n                  placeholder=\"press to add weight\"\r\n                  onChangeText={setCurWeight3}\r\n                ></TextInput>\r\n                <Text style={styles.goalsText}>\r\n                  Current Goal:{\" \"}\r\n                  <Text style={{ fontWeight: \"bold\" }}>\r\n                    {usrLegGoals[2]}lbs.\r\n                  </Text>\r\n                </Text>\r\n                <Text style={styles.goalsText}>\r\n                  Previous Max:{\" \"}\r\n                  <Text style={{ fontWeight: \"bold\" }}>\r\n                    {usrLegMaxes[2]}lbs.\r\n                  </Text>\r\n                </Text>\r\n                <Text style={styles.counter}>{reps}</Text>\r\n                <View style={styles.buttonGroup1}>\r\n                  <Pressable\r\n                    style={styles.rep1Button}\r\n                    onPress={() => {\r\n                      setReps(reps + 1);\r\n                    }}\r\n                  >\r\n                    <Text style={styles.rep1ButtonFont}>+1 Rep</Text>\r\n                  </Pressable>\r\n                  <Pressable\r\n                    style={styles.rep0Button}\r\n                    onPress={() => {\r\n                      setReps((reps = 0));\r\n                    }}\r\n                  >\r\n                    <Text style={styles.rep0ButtonFont}>Set Reps to 0</Text>\r\n                  </Pressable>\r\n                </View>\r\n                <Pressable\r\n                  style={styles.nextButton}\r\n                  onPress={() => {\r\n                    setReps((reps = 0));\r\n                    if (Number(curWeight3) > Number(usrLegMaxes[2])) {\r\n                      newMax3 = curWeight3;\r\n                      console.log(\"new max achieved!\");\r\n                    } else {\r\n                      newMax3 = usrLegMaxes[2];\r\n                      console.log(\"almost there\");\r\n                    }\r\n                    if (Number(curWeight2) > Number(usrLegMaxes[1])) {\r\n                      newMax2 = curWeight2;\r\n                      console.log(\"new max achieved!\");\r\n                    } else {\r\n                      newMax2 = usrLegMaxes[1];\r\n                      console.log(\"almost there\");\r\n                    }\r\n                    if (Number(curWeight1) > Number(usrLegMaxes[0])) {\r\n                      newMax1 = curWeight1;\r\n                      console.log(\"new max achieved!\");\r\n                    } else {\r\n                      newMax1 = usrLegMaxes[0];\r\n                      console.log(\"almost there\");\r\n                    }\r\n                    clearArray(loginData[0].usrMaxes[2]);\r\n                    loginData[0].usrMaxes[2].push(newMax1);\r\n                    loginData[0].usrMaxes[2].push(newMax2);\r\n                    loginData[0].usrMaxes[2].push(newMax3);\r\n\r\n                    navigation.navigate(\"Regiment Selection\", {\r\n                      loginData: loginData,\r\n                    });\r\n                  }}\r\n                >\r\n                  <Text style={styles.nextButtonFont}>Complete Workout</Text>\r\n                </Pressable>\r\n              </View>\r\n            </View>\r\n          </>\r\n        );\r\n      }\r\n    case 3:\r\n      const teaCups = 0;\r\n      const sideRaise = 1;\r\n      const ohPress = 2;\r\n      const facePulls = 3;\r\n      let [curShoul, setCurShoul] = useState(teaCups);\r\n\r\n      if (curShoul === teaCups) {\r\n        return (\r\n          <>\r\n            <View style={styles.container}>\r\n              <Text style={styles.instruction}>\r\n                Warmp up your shoulders with some Teacups.\r\n              </Text>\r\n              <View style={styles.counterGroup}>\r\n                <Text style={styles.counter}>{reps}</Text>\r\n                <View style={styles.buttonGroup1}>\r\n                  <Pressable\r\n                    style={styles.rep1Button}\r\n                    onPress={() => {\r\n                      setReps(reps + 1);\r\n                    }}\r\n                  >\r\n                    <Text style={styles.rep1ButtonFont}>+1 Rep</Text>\r\n                  </Pressable>\r\n                  <Pressable\r\n                    style={styles.rep0Button}\r\n                    onPress={() => {\r\n                      setReps((reps = 0));\r\n                    }}\r\n                  >\r\n                    <Text style={styles.rep0ButtonFont}>Set Reps to 0</Text>\r\n                  </Pressable>\r\n                </View>\r\n                <Pressable\r\n                  style={styles.nextButton}\r\n                  onPress={() => {\r\n                    setCurShoul(sideRaise);\r\n                    setReps((reps = 0));\r\n                  }}\r\n                >\r\n                  <Text style={styles.nextButtonFont}>Next Exercise</Text>\r\n                </Pressable>\r\n              </View>\r\n              <Pressable\r\n                style={styles.returnButton4}\r\n                onPress={() => {\r\n                  navigation.navigate(\"Regiment Selection\", {\r\n                    loginData: loginData,\r\n                  });\r\n                }}\r\n              >\r\n                <Text style={styles.returnButtonFont3}>\r\n                  Return to Workout Selection\r\n                </Text>\r\n              </Pressable>\r\n            </View>\r\n          </>\r\n        );\r\n      } else if (curShoul === sideRaise) {\r\n        return (\r\n          <>\r\n            <View style={styles.container}>\r\n              <Text style={styles.instruction}>Exercise 1: Side Raises</Text>\r\n              <View style={styles.counterGroup}>\r\n                <TextInput\r\n                  style={styles.weightInput}\r\n                  placeholder=\"press to add weight\"\r\n                  onChangeText={setCurWeight1}\r\n                ></TextInput>\r\n                <Text style={styles.goalsText}>\r\n                  Current Goal:{\" \"}\r\n                  <Text style={{ fontWeight: \"bold\" }}>\r\n                    {usrShoGoals[0]}lbs.\r\n                  </Text>\r\n                </Text>\r\n                <Text style={styles.goalsText}>\r\n                  Previous Max:{\" \"}\r\n                  <Text style={{ fontWeight: \"bold\" }}>\r\n                    {usrShoMaxes[0]}lbs.\r\n                  </Text>\r\n                </Text>\r\n                <Text style={styles.counter}>{reps}</Text>\r\n                <View style={styles.buttonGroup1}>\r\n                  <Pressable\r\n                    style={styles.rep1Button}\r\n                    onPress={() => {\r\n                      setReps(reps + 1);\r\n                    }}\r\n                  >\r\n                    <Text style={styles.rep1ButtonFont}>+1 Rep</Text>\r\n                  </Pressable>\r\n                  <Pressable\r\n                    style={styles.rep0Button}\r\n                    onPress={() => {\r\n                      setReps((reps = 0));\r\n                    }}\r\n                  >\r\n                    <Text style={styles.rep0ButtonFont}>Set Reps to 0</Text>\r\n                  </Pressable>\r\n                </View>\r\n                <Pressable\r\n                  style={styles.nextButton}\r\n                  onPress={() => {\r\n                    setCurShoul(ohPress);\r\n                    setReps((reps = 0));\r\n                  }}\r\n                >\r\n                  <Text style={styles.nextButtonFont}>Next Exercise</Text>\r\n                </Pressable>\r\n              </View>\r\n              <Pressable\r\n                style={styles.returnButton4}\r\n                onPress={() => {\r\n                  navigation.navigate(\"Regiment Selection\", {\r\n                    loginData: loginData,\r\n                  });\r\n                }}\r\n              >\r\n                <Text style={styles.returnButtonFont3}>\r\n                  Return to Workout Selection\r\n                </Text>\r\n              </Pressable>\r\n            </View>\r\n          </>\r\n        );\r\n      } else if (curShoul === ohPress) {\r\n        return (\r\n          <>\r\n            <View style={styles.container}>\r\n              <Text style={styles.instruction}>Exercise 2: Overhead Press</Text>\r\n              <View style={styles.counterGroup}>\r\n                <TextInput\r\n                  style={styles.weightInput}\r\n                  placeholder=\"press to add weight\"\r\n                  onChangeText={setCurWeight2}\r\n                ></TextInput>\r\n                <Text style={styles.goalsText}>\r\n                  Current Goal:{\" \"}\r\n                  <Text style={{ fontWeight: \"bold\" }}>\r\n                    {usrShoGoals[1]}lbs.\r\n                  </Text>\r\n                </Text>\r\n                <Text style={styles.goalsText}>\r\n                  Previous Max:{\" \"}\r\n                  <Text style={{ fontWeight: \"bold\" }}>\r\n                    {usrShoMaxes[1]}lbs.\r\n                  </Text>\r\n                </Text>\r\n                <Text style={styles.counter}>{reps}</Text>\r\n                <View style={styles.buttonGroup1}>\r\n                  <Pressable\r\n                    style={styles.rep1Button}\r\n                    onPress={() => {\r\n                      setReps(reps + 1);\r\n                    }}\r\n                  >\r\n                    <Text style={styles.rep1ButtonFont}>+1 Rep</Text>\r\n                  </Pressable>\r\n                  <Pressable\r\n                    style={styles.rep0Button}\r\n                    onPress={() => {\r\n                      setReps((reps = 0));\r\n                    }}\r\n                  >\r\n                    <Text style={styles.rep0ButtonFont}>Set Reps to 0</Text>\r\n                  </Pressable>\r\n                </View>\r\n                <Pressable\r\n                  style={styles.nextButton}\r\n                  onPress={() => {\r\n                    setCurShoul(facePulls);\r\n                    setReps((reps = 0));\r\n                  }}\r\n                >\r\n                  <Text style={styles.nextButtonFont}>Next Exercise</Text>\r\n                </Pressable>\r\n              </View>\r\n              <Pressable\r\n                style={styles.returnButton4}\r\n                onPress={() => {\r\n                  navigation.navigate(\"Regiment Selection\", {\r\n                    loginData: loginData,\r\n                  });\r\n                }}\r\n              >\r\n                <Text style={styles.returnButtonFont3}>\r\n                  Return to Workout Selection\r\n                </Text>\r\n              </Pressable>\r\n            </View>\r\n          </>\r\n        );\r\n      } else if (curShoul === facePulls) {\r\n        return (\r\n          <>\r\n            <View style={styles.container}>\r\n              <Text style={styles.instruction}>Exercise 3: Face Pulls</Text>\r\n              <View style={styles.counterGroup}>\r\n                <TextInput\r\n                  style={styles.weightInput}\r\n                  placeholder=\"press to add weight\"\r\n                  onChangeText={setCurWeight3}\r\n                ></TextInput>\r\n                <Text style={styles.goalsText}>\r\n                  Current Goal:{\" \"}\r\n                  <Text style={{ fontWeight: \"bold\" }}>\r\n                    {usrShoGoals[2]}lbs.\r\n                  </Text>\r\n                </Text>\r\n                <Text style={styles.goalsText}>\r\n                  Previous Max:{\" \"}\r\n                  <Text style={{ fontWeight: \"bold\" }}>\r\n                    {usrShoMaxes[2]}lbs.\r\n                  </Text>\r\n                </Text>\r\n                <Text style={styles.counter}>{reps}</Text>\r\n                <View style={styles.buttonGroup1}>\r\n                  <Pressable\r\n                    style={styles.rep1Button}\r\n                    onPress={() => {\r\n                      setReps(reps + 1);\r\n                    }}\r\n                  >\r\n                    <Text style={styles.rep1ButtonFont}>+1 Rep</Text>\r\n                  </Pressable>\r\n                  <Pressable\r\n                    style={styles.rep0Button}\r\n                    onPress={() => {\r\n                      setReps((reps = 0));\r\n                    }}\r\n                  >\r\n                    <Text style={styles.rep0ButtonFont}>Set Reps to 0</Text>\r\n                  </Pressable>\r\n                </View>\r\n                <Pressable\r\n                  style={styles.nextButton}\r\n                  onPress={() => {\r\n                    setReps((reps = 0));\r\n                    if (Number(curWeight3) > Number(usrShoMaxes[2])) {\r\n                      newMax3 = curWeight3;\r\n                      console.log(\"new max achieved!\");\r\n                    } else {\r\n                      newMax3 = usrShoMaxes[2];\r\n                      console.log(\"almost there\");\r\n                    }\r\n                    if (Number(curWeight2) > Number(usrShoMaxes[1])) {\r\n                      newMax2 = curWeight2;\r\n                      console.log(\"new max achieved!\");\r\n                    } else {\r\n                      newMax2 = usrShoMaxes[1];\r\n                      console.log(\"almost there\");\r\n                    }\r\n                    if (Number(curWeight1) > Number(usrShoMaxes[0])) {\r\n                      newMax1 = curWeight1;\r\n                      console.log(\"new max achieved!\");\r\n                    } else {\r\n                      newMax1 = usrShoMaxes[0];\r\n                      console.log(\"almost there\");\r\n                    }\r\n                    clearArray(loginData[0].usrMaxes[3]);\r\n                    loginData[0].usrMaxes[3].push(newMax1);\r\n                    loginData[0].usrMaxes[3].push(newMax2);\r\n                    loginData[0].usrMaxes[3].push(newMax3);\r\n\r\n                    navigation.navigate(\"Regiment Selection\", {\r\n                      loginData: loginData,\r\n                    });\r\n                  }}\r\n                >\r\n                  <Text style={styles.nextButtonFont}>Complete Workout</Text>\r\n                </Pressable>\r\n              </View>\r\n            </View>\r\n          </>\r\n        );\r\n      }\r\n    case 4:\r\n      return (\r\n        <>\r\n          <View style={styles.container}>\r\n            <View style={styles.counterGroup}>\r\n              <Text style={styles.instruction}>\r\n                Looks like today is your Rest Day!\r\n              </Text>\r\n              <Text style={styles.label}>\r\n                Keep your muscles in good condition with effective stretching\r\n                and plenty of sleep!\r\n              </Text>\r\n              <Pressable\r\n                onPress={() => {\r\n                  navigation.navigate(\"Regiment Selection\", {\r\n                    loginData: loginData,\r\n                  });\r\n                }}\r\n                style={styles.returnButton4}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    fontSize: 30,\r\n                    color: \"white\",\r\n                    fontWeight: \"bold\",\r\n                  }}\r\n                >\r\n                  Return to Workout Selection\r\n                </Text>\r\n              </Pressable>\r\n            </View>\r\n          </View>\r\n        </>\r\n      );\r\n  }\r\n}\r\n\r\nconst { width } = Dimensions.get(\"window\");\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#FFC904\",\r\n  },\r\n  container2: {\r\n    backgroundColor: \"#FFC904\",\r\n  },\r\n\r\n  instruction: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n    paddingBottom: 10,\r\n    marginHorizontal: 5,\r\n  },\r\n  label: {\r\n    fontSize: width * 0.065,\r\n    fontWeight: \"bold\",\r\n    paddingLeft: 20,\r\n    paddingBottom: 2,\r\n  },\r\n  text: {\r\n    width: width,\r\n    fontSize: width * 0.07,\r\n    textAlign: \"center\",\r\n    paddingVertical: 5,\r\n  },\r\n\r\n  slider: {\r\n    paddingVertical: 10,\r\n    borderTopWidth: 3,\r\n    borderBottomWidth: 3,\r\n    backgroundColor: \"white\",\r\n  },\r\n\r\n  buttonGroup1: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n  },\r\n  buttonGroup2: {\r\n    paddingVertical: width * 0.2,\r\n    width: width * 0.7,\r\n  },\r\n\r\n  button: {\r\n    width: width * 0.45,\r\n    margin: 5,\r\n    padding: 3,\r\n    borderColor: \"black\",\r\n    borderWidth: 1,\r\n    textAlign: \"center\",\r\n    backgroundColor: \"#FFE278\",\r\n  },\r\n  buttonFont: {\r\n    fontSize: 30,\r\n    fontWeight: \"bold\",\r\n  },\r\n\r\n  logButton: {\r\n    borderTopLeftRadius: 15,\r\n    borderBottomLeftRadius: 15,\r\n    backgroundColor: \"#FFE278\",\r\n    borderWidth: 1,\r\n    borderColor: \"black\",\r\n    width: width * 0.4,\r\n    padding: 10,\r\n  },\r\n  logButtonFont: {\r\n    fontSize: 35,\r\n    color: \"black\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  returnButton: {\r\n    borderTopRightRadius: 15,\r\n    borderBottomRightRadius: 15,\r\n    backgroundColor: \"black\",\r\n    borderWidth: 1,\r\n    borderColor: \"black\",\r\n    width: width * 0.4,\r\n    padding: 10,\r\n  },\r\n  returnButton2: {\r\n    borderBottomLeftRadius: 15,\r\n    borderBottomRightRadius: 15,\r\n    backgroundColor: \"black\",\r\n    borderWidth: 1,\r\n    borderColor: \"black\",\r\n    height: width * 0.2,\r\n    marginTop: 10,\r\n    justifyContent: \"center\",\r\n  },\r\n  returnButton3: {\r\n    backgroundColor: \"black\",\r\n    borderBottomRightRadius: 15,\r\n    borderColor: \"black\",\r\n    width: width * 0.5,\r\n    justifyContent: \"center\",\r\n  },\r\n  returnButton4: {\r\n    backgroundColor: \"black\",\r\n    borderColor: \"black\",\r\n    borderRadius: 15,\r\n    width: width * 0.8,\r\n    padding: 5,\r\n    marginTop: 70,\r\n  },\r\n  returnButtonFont: {\r\n    fontSize: 40,\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n  },\r\n  returnButtonFont2: {\r\n    fontSize: 20,\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  returnButtonFont3: {\r\n    fontSize: 30,\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n    fontWeight: \"bold\",\r\n  },\r\n\r\n  disabledButton: {\r\n    backgroundColor: \"gray\",\r\n    borderBottomRightRadius: 15,\r\n    borderColor: \"black\",\r\n    borderWidth: 1,\r\n    width: width * 0.5,\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  saveButton: {\r\n    backgroundColor: \"#FFE278\",\r\n    borderBottomLeftRadius: 15,\r\n    borderColor: \"black\",\r\n    borderWidth: 1,\r\n    width: width * 0.5,\r\n    justifyContent: \"center\",\r\n  },\r\n  saveButtonFont: {\r\n    margin: 7,\r\n    fontSize: 20,\r\n    textAlign: \"center\",\r\n    fontWeight: \"bold\",\r\n  },\r\n\r\n  listButton: {\r\n    justifyContent: \"center\",\r\n    borderColor: \"black\",\r\n    borderWidth: 1,\r\n    height: width * 0.3,\r\n    backgroundColor: \"#FFE278\",\r\n  },\r\n  listButtonTop: {\r\n    borderTopLeftRadius: 15,\r\n    borderTopRightRadius: 15,\r\n    justifyContent: \"center\",\r\n    borderColor: \"black\",\r\n    borderWidth: 1,\r\n    height: width * 0.3,\r\n    backgroundColor: \"#FFE278\",\r\n  },\r\n  listButtonDisabled: {\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"white\",\r\n    borderWidth: 1,\r\n    height: width * 0.3,\r\n    borderColor: \"black\",\r\n  },\r\n  listButtonDisabledTop: {\r\n    borderTopLeftRadius: 15,\r\n    borderTopRightRadius: 15,\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"white\",\r\n    borderWidth: 1,\r\n    height: width * 0.3,\r\n    borderColor: \"black\",\r\n  },\r\n  listButtonFont: {\r\n    fontSize: 35,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  goalsGroup: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n  },\r\n  goalsText: {\r\n    fontSize: 27,\r\n    paddingHorizontal: 5,\r\n    paddingBottom: 5,\r\n  },\r\n  goalsInput: {\r\n    alignSelf: \"center\",\r\n    backgroundColor: \"#FFE278\",\r\n    borderWidth: 1,\r\n    width: width * 0.5,\r\n    marginBottom: 10,\r\n    fontSize: 40,\r\n  },\r\n  goalsInputGroup: {\r\n    borderWidth: 3,\r\n    borderColor: \"black\",\r\n    backgroundColor: \"white\",\r\n    padding: 10,\r\n    paddingHorizontal: 30,\r\n    borderRadius: 15,\r\n  },\r\n\r\n  input: {\r\n    width: width * 0.85,\r\n    fontSize: 30,\r\n    color: \"black\",\r\n    borderWidth: 1,\r\n    borderColor: \"black\",\r\n    borderRadius: 10,\r\n    padding: 3,\r\n    margin: 10,\r\n  },\r\n  inputGroup: {\r\n    borderWidth: 1,\r\n    borderColor: \"black\",\r\n    borderRadius: 15,\r\n    backgroundColor: \"white\",\r\n    padding: 10,\r\n    margin: 10,\r\n  },\r\n\r\n  counter: {\r\n    fontWeight: \"bold\",\r\n    color: \"white\",\r\n    fontSize: 50,\r\n    backgroundColor: \"black\",\r\n    borderTopLeftRadius: 15,\r\n    borderTopRightRadius: 15,\r\n    width: width * 0.8,\r\n    textAlign: \"center\",\r\n  },\r\n  counterGroup: {\r\n    backgroundColor: \"#FFE278\",\r\n    borderColor: \"black\",\r\n    borderRadius: 15,\r\n    borderWidth: 1,\r\n    padding: 15,\r\n  },\r\n\r\n  rep1Button: {\r\n    backgroundColor: \"black\",\r\n    width: width * 0.4,\r\n    justifyContent: \"center\",\r\n  },\r\n  rep1ButtonFont: {\r\n    fontSize: 30,\r\n    fontWeight: \"bold\",\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n  },\r\n  rep0Button: {\r\n    backgroundColor: \"#FFC904\",\r\n    borderWidth: 1,\r\n    width: width * 0.4,\r\n    justifyContent: \"center\",\r\n  },\r\n  rep0ButtonFont: {\r\n    fontSize: 30,\r\n    fontWeight: \"bold\",\r\n    color: \"black\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  nextButton: {\r\n    width: width * 0.8,\r\n    borderWidth: 1,\r\n    backgroundColor: \"white\",\r\n    marginTop: 20,\r\n    borderBottomLeftRadius: 15,\r\n    borderBottomRightRadius: 15,\r\n  },\r\n  nextButtonFont: {\r\n    fontSize: 45,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  weightInput: {\r\n    alignSelf: \"center\",\r\n    backgroundColor: \"white\",\r\n    borderWidth: 1,\r\n    width: width * 0.6,\r\n    marginBottom: 10,\r\n    fontSize: 25,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/ResistanceTrainerNativeDemo/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [920], () => (__webpack_require__(9484)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["LoginScreen","_ref","navigation","loginData","route","params","_useState","useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_jsx","_Fragment","children","_jsxs","View","style","styles","container","inputGroup","Text","title","TextInput","input","placeholder","onChangeText","buttonGroup","Pressable","logButton","onPress","console","log","some","navigate","alert","logButtonFont","regButton","regButtonFont","width","Dimensions","StyleSheet","flex","alignItems","justifyContent","backgroundColor","borderTopRightRadius","borderBottomRightRadius","borderWidth","borderColor","padding","borderTopLeftRadius","borderBottomLeftRadius","fontSize","textAlign","color","flexDirection","marginTop","borderRadius","margin","fontWeight","paddingBottom","Stack","createNativeStackNavigator","defaultUser","usrRegiment","clearArray","array","i","length","pop","App","useEffect","_getValue","_asyncToGenerator","value","AsyncStorage","JSON","stringify","push","apply","_toConsumableArray","parse","arguments","getValue","NavigationContainer","Navigator","initialRouteName","Screen","name","component","options","headerShown","initialParams","RegistrationScreen","SelectionScreen","EditingScreen","GoalsScreen","CurrentExerciseScreen","_useState5","_useState6","confirmPass","setConfrimPass","_useState7","_useState8","fName","setFname","_useState9","_useState10","lName","setLname","_useState11","_useState12","email","setEmail","newUser","firstName","lastName","usrGoals","usrMaxes","flags","gate","nameRegEx","emailRegEx","validateEmail","error","test","validateName","instruction","errorMessage","validatePassword","validateConfirmPass","onBlur","buttonGroup1","testID","returnButton","returnButtonFont","_ref2","indicies","_useState13","_useState14","saved","setSave","scrollRef1","React","scrollRef2","scrollRef3","scrollRef4","scrollRef5","scrollRef6","scrollRef7","newRegiment","handleSelections","regDays","SafeAreaView","container2","label","SwiperFlatList","ref","index","data","renderItem","_ref3","item","slider","text","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","saveButton","selections","current","getCurrentIndex","map","saveButtonFont","disabledButton","returnButton3","disabled","returnButtonFont2","_ref10","_useState15","_useState16","madeReg","updateMadeReg","_useState17","_useState18","madeGoals","updateMadeGoals","buttonGroup2","listButtonDisabledTop","listButtonTop","listButtonFont","listButtonDisabled","listButton","returnButton2","_ref11","usrPushGoals","usrPullGoals","usrLegGoals","usrShoGoals","usrPushMaxes","usrPullMaxes","usrLegMaxes","usrShoMaxes","_useState19","_useState20","goal1","setGoal1","_useState21","_useState22","goal2","setGoal2","_useState23","_useState24","goal3","setGoal3","_useState25","_useState26","dispGoals","setDispGoals","_useState27","_useState28","dispMaxes","setDispMaxes","_useState29","_useState30","dispExercise","setDispExercise","_useState31","_useState32","curGroup","setCurGroup","_useState33","_useState34","openGate","goalsInputGroup","button","buttonFont","goalsGroup","goalsText","goalsInput","_ref12","newMax1","newMax2","newMax3","_useState35","_useState36","reps","setReps","usrReg","day","Date","getDay","regIndex","_useState37","_useState38","curWeight1","setCurWeight1","_useState39","_useState40","curWeight2","setCurWeight2","_useState41","_useState42","curWeight3","setCurWeight3","_useState43","_useState44","curPush","setCurPush","counterGroup","counter","rep1Button","rep1ButtonFont","rep0Button","rep0ButtonFont","nextButton","nextButtonFont","returnButton4","returnButtonFont3","weightInput","Number","_useState45","_useState46","curPull","setCurPull","_useState47","_useState48","curLegs","setCurLegs","_useState49","_useState50","curShoul","setCurShoul","marginHorizontal","paddingLeft","paddingVertical","borderTopWidth","borderBottomWidth","height","paddingHorizontal","alignSelf","marginBottom","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","id","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","then","ns","create","def","indexOf","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}